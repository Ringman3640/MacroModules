<UserControl x:Class="MacroModules.App.Views.ModuleBoardView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
             xmlns:local="clr-namespace:MacroModules.App.Views" 
             xmlns:viewmodels="clr-namespace:MacroModules.App.ViewModels" 
             xmlns:modules="clr-namespace:MacroModules.App.Views.Modules" 
             xmlns:behaviors="clr-namespace:MacroModules.App.Behaviors" 
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=viewmodels:ModuleBoardViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">
    <Canvas x:Name="cvBoardContainer" Background="Transparent">
        <i:Interaction.Behaviors>
            <behaviors:MouseAwareBehavior MouseAwareBehaviorInstance="{Binding MouseAwareBehaviorConnector, Mode=OneWayToSource}" MousePosition="{Binding MousePosition, Mode=OneWayToSource}"/>
        </i:Interaction.Behaviors>
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseRightButtonDown">
                <i:InvokeCommandAction Command="{Binding Path=Board_RightMouseDownCommand}" PassEventArgsToCommand="True"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseRightButtonUp">
                <i:InvokeCommandAction Command="{Binding Path=Board_RightMouseUpCommand}" PassEventArgsToCommand="True"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseLeftButtonDown">
                <i:InvokeCommandAction Command="{Binding Path=Board_LeftMouseDownCommand}" PassEventArgsToCommand="True"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseLeftButtonUp">
                <i:InvokeCommandAction Command="{Binding Path=Board_LeftMouseUpCommand}" PassEventArgsToCommand="True"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseMove">
                <i:InvokeCommandAction Command="{Binding Path=Board_MouseMoveCommand}" PassEventArgsToCommand="True"/>
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseWheel">
                <i:InvokeCommandAction Command="{Binding Path=Board_MouseWheelCommand}" PassEventArgsToCommand="True"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>

        <ItemsControl ItemsSource="{Binding Elements}" RenderTransform="{Binding BoardTransform}" Canvas.Left="{Binding BoardPosition.X}" Canvas.Top="{Binding BoardPosition.Y}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
                <Style>
                    <Setter Property="Canvas.Left" Value="{Binding Position.X}"/>
                    <Setter Property="Canvas.Top" Value="{Binding Position.Y}"/>
                </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="viewmodels:ModuleViewModel">
                    <modules:ModuleView/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <Canvas x:Name="cvModuleBoard" Canvas.Left="{Binding ModuleBoardPosX}" Canvas.Top="{Binding ModuleBoardPosY}"/>

        <Rectangle x:Name="rectSelectBox" IsHitTestVisible="False"
                   Canvas.Left="{Binding SelectBoxRegion.Left}" Canvas.Top="{Binding SelectBoxRegion.Top}"
                   Width="{Binding SelectBoxRegion.Width}" Height="{Binding SelectBoxRegion.Height}"
                   Visibility="{Binding SelectBoxVisibility}" Fill="LightBlue" Stroke="RoyalBlue" Opacity="0.5"/>
    </Canvas>
</UserControl>
